---
import PageLayout from '@/layouts/layout.astro'
import { getArticleResourceBySlug } from '@/features'
import { Calendar } from 'lucide-react'

const { slug } = Astro.params

if (!slug) {
  return Astro.redirect('/404')
}

const resource = await getArticleResourceBySlug(slug)

if (!resource) {
  return Astro.redirect('/404')
}

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  })
}

const allTags = [
  resource.tags.name,
  ...resource.resourceTags.map((t) => t.name).filter((name) => name !== resource.tags.name),
]
---

<PageLayout
  title={resource.titulo}
  description={resource.descripcion}
  image={resource.imagenDestacada?.url}
>
  <main class="bg-white py-12 lg:py-16">
    <article class="prose prose-lg mx-auto max-w-4xl px-4">
      {
        resource.imagenDestacada?.url && (
          <img
            src={resource.imagenDestacada.url}
            alt={resource.imagenDestacada.alt}
            class="mb-8 w-full rounded-lg"
          />
        )
      }

      <h1 class="font-heading text-primary text-4xl font-bold">{resource.titulo}</h1>

      <div class="text-neutral mb-8 flex items-center gap-6 text-base">
        <div class="flex items-center gap-2">
          <Calendar client:visible className="h-4 w-4" />
          <span>{formatDate(resource.fechaPublicacion)}</span>
        </div>
      </div>

      {
        allTags.length > 0 && (
          <div class="mb-8 flex flex-wrap gap-2">
            {allTags.map((tagName) => (
              <span class="bg-primary/10 text-primary rounded-full px-3 py-1 text-sm font-medium">
                {tagName}
              </span>
            ))}
          </div>
        )
      }

      <hr class="mb-8" />

      <div
        class="prose-p:text-neutral prose-headings:text-primary"
        set:html={resource.contenidoHtml}
      />
    </article>
  </main>
</PageLayout>
